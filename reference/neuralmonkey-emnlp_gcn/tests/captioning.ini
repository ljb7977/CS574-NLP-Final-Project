;; Small training test

[main]
name="Image Captioning"
tf_manager=<tf_manager>
output="tests/outputs/captioning"
overwrite_output_dir=True
batch_size=5
epochs=1
train_dataset=<train_data>
val_dataset=<val_data>
trainer=<trainer>
runners=[<runner>]
postprocess=None
evaluation=[("target", <bleu>)]
logging_period=1
validation_period=2
runners_batch_size=1
test_datasets=[<val_data>,<val_data_no_target>]
random_seed=1234

[tf_manager]
class=tf_manager.TensorFlowManager
num_threads=4
num_sessions=1

[bleu]
class=evaluators.bleu.BLEUEvaluator

[image_reader]
class=readers.image_reader.image_reader
prefix="tests/data/flickr30k"
pad_h=224
pad_w=224
mode="RGB"

[train_data]
class=dataset.load_dataset_from_files
s_target="tests/data/flickr30k/train.en"
s_images=("tests/data/flickr30k/train_images.txt", <image_reader>)
lazy=True

[val_data]
class=dataset.load_dataset_from_files
s_target="tests/data/flickr30k/val.en"
s_images=("tests/data/flickr30k/val_images.txt", <image_reader>)

[val_data_no_target]
class=dataset.load_dataset_from_files
s_images=("tests/data/flickr30k/val_images.txt", <image_reader>)

[imagenet]
class=encoders.imagenet_encoder.ImageNet
name="imagenet_alexnet"
data_id="images"
network_type="alexnet"
output_layer="alexnet_v2/conv5"


[decoder_vocabulary]
class=vocabulary.from_dataset
datasets=[<train_data>]
series_ids=["target"]
max_size=70
save_file="tests/outputs/captioning/decoder_vocabulary.pickle"
overwrite=True

[decoder]
class=decoders.decoder.Decoder
name="decoder"
encoders=[<imagenet>]
rnn_size=8
embedding_size=9
use_attention=True
dropout_keep_prob=0.5
data_id="target"
max_output_len=10
vocabulary=<decoder_vocabulary>

[trainer]
; This block just fills the arguments of the trainer __init__ method.
class=trainers.cross_entropy_trainer.CrossEntropyTrainer
decoders=[<decoder>]
l2_weight=1.0e-8
clip_norm=1.0

[runner]
class=runners.runner.GreedyRunner
decoder=<decoder>
output_series="target"
