; This is a test configuration file for MT task with factored input.

[main]
name="translation with factored input"
tf_manager=<tf_manager>
output="tests/outputs/factored"
overwrite_output_dir=True
batch_size=16
epochs=2
train_dataset=<train_data>
val_dataset=<val_data>
trainer=<trainer>
runners=[<runner>]
postprocess=None
evaluation=[("target", <bleu>)]
logging_period=10
validation_period=10

[tf_manager]
class=tf_manager.TensorFlowManager
num_threads=4
num_sessions=1

[bleu]
class=evaluators.bleu.BLEUEvaluator

[train_data]
class=dataset.load_dataset_from_files
s_source="tests/data/multi/train.forms-en.txt"
s_tags="tests/data/multi/train.tags-en.txt"
s_target="tests/data/multi/train.forms-cs.txt"

[val_data]
class=dataset.load_dataset_from_files
s_source="tests/data/multi/val.forms-en.txt"
s_tags="tests/data/multi/val.tags-en.txt"
s_target="tests/data/multi/val.forms-cs.txt"

[surface_source_vocabulary]
class=vocabulary.from_dataset
datasets=[<train_data>]
series_ids=["source"]
max_size=5000
save_file="tests/outputs/factored/surface_vocabulary.pickle"
overwrite=True

[tag_vocabulary]
class=vocabulary.from_dataset
datasets=[<train_data>]
series_ids=["tags"]
max_size=5000
save_file="tests/outputs/factored/tag_vocabulary.pickle"
overwrite=True

[surface_target_vocabulary]
class=vocabulary.from_dataset
datasets=[<train_data>]
series_ids=["target"]
max_size=5000
save_file="tests/outputs/factored/decoder_vocabulary.pickle"
overwrite=True


[encoder]
class=encoders.factored_encoder.FactoredEncoder
name="factored_encoder"
rnn_size=32
max_input_len=10
embedding_sizes=[20, 10]
dropout_keep_prob=0.5
attention_type=decoding_function.Attention
data_ids=["source", "tags"]
vocabularies=[<surface_source_vocabulary>, <tag_vocabulary>]

[decoder]
class=decoders.decoder.Decoder
name="decoder"
encoders=[<encoder>]
rnn_size=32
embedding_size=20
use_attention=True
dropout_keep_prob=0.5
data_id="target"
max_output_len=10
vocabulary=<surface_target_vocabulary>

[trainer]
class=trainers.cross_entropy_trainer.CrossEntropyTrainer
decoders=[<decoder>]
l2_weight=1.0e-8
clip_norm=1.0

[runner]
class=runners.runner.GreedyRunner
decoder=<decoder>
output_series="target"
